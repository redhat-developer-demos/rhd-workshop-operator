---
- name: "Facts"
  debug:
    msg: "{{ansible_search_path}}"

- name: "Create htpasswd file"
  htpasswd:
    path: "{{ lookup('env','HOME') }}/users.htpasswd"
    name: "{{ 'user%03d' | format(item) }}"
    password: "{{ users.password }}"
  loop: "{{ range(users.from,(users.to+1),1)|list  }}"
  register: htpasswd_out
  when: users.create

- name: "Add Cluster Admin"
  htpasswd:
    path: "{{ lookup('env','HOME') }}/users.htpasswd"
    create: False
    name: "ocpadmin"
    password: "{{users.admin_password}}"
  register: ocpadmin_added
  when: htpasswd_out.changed

- name: "Add Cluster Admin Role to ocpadmin"
  k8s:
    state: present
    resource_definition: "{{ lookup('file','rb_ocpadmin.yaml') }}"
  when: ocpadmin_added.changed

- name: "Create OAuth httpasswd secret"
  k8s:
    state: present
    force: true
    definition: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: "htpass-secret"
        namespace: "openshift-config"
      data: 
        htpasswd: "{{ lookup('file',(lookup('env','HOME')+'/users.htpasswd'))|b64encode }}"
      type: Opaque
  when: htpasswd_out.changed

- name: "Create an httpasswd identity"
  k8s:
    state: present
    resource_definition: "{{ lookup('file','htpasswd_provider.yaml') }}"
  when: htpasswd_out.changed

# TODO Check if needed
# - name: "Apply Network Policy"
#   k8s:
#     state: present
#     resource_definition: "{{ lookup('file','network_policy.yaml') }}"
#   when: htpasswd_out.changed

#####################################
# Workshop Student Projects
# Limits andQuotas
# Role and Role binding
#####################################
- name: "Create Workshop Students Group"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','workshop-students-group.yaml.j2') }}"
  when: htpasswd_out.changed

- name: "Create Workshop Students Role"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file','workshop-student-roles.yaml') }}"
  when: htpasswd_out.changed

- name: "Apply Workshop Students Cluster Role"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file','rb_workshop_students.yaml') }}"
  when: htpasswd_out.changed

- name: "Create Projects"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','project.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  register: projects_created
  when: create_projects or htpasswd_out.changed

- name: "Apply Project Default Limits"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','project_limits.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Role Binding:: Project Admin"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','rb_project_admin.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Create Workshop Student Role"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','workshop_student_project.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Apply Workshop Student Role"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','rb_workshop_student_project.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Role Binding:: Image Puller"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','rb_sa_image_pullers.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Role Binding:: Image Builders"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','rb_sa_image_builders.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

- name: "Role Binding:: Deployers"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template','rb_sa_deployers.yaml.j2') }}"
  loop: "{{ projects|product(range(users.from,(users.to+1),1)|list)|list  }}"
  when: projects_created.changed

############################
## Operators
############################

- name: "Create Community Catalog Sources"
  k8s:
   state: present
   definition: "{{ lookup('template','catalog_sources.yaml.j2') }}"
  when: stacks.install

- name: "Create Red Hat Catalog Sources"
  k8s:
   state: present
   definition: "{{ lookup('template','rh_catalog_sources.yaml.j2') }}"
  when: stacks.install

- name: "Install Image Cachier" 
  include_tasks: install_image_cachier.yaml
  when: stacks.install
  
- name: "Install Eclipse Che" 
  include_tasks: install_che.yaml
  when: stacks.install

- name: "Get Stacks"
  set_fact:
    stack_names: "{{ (stacks|json_query('community[*].name')) | union((stacks|json_query('redhat[*].name'))) }}" 

- name: "Install Servicemesh" 
  include_tasks: install_servicemesh.yaml
  when: "stacks.install and 'servicemesh' in stack_names"

- name: "Install Knative Serving" 
  include_tasks: install_kn_serving.yaml
  when: "stacks.install and  'knative-serving' in stack_names"

- name: "Install OpenShift Pipelines" 
  include_tasks: install_pipelines.yaml
  when: "stacks.install and 'pipelines' in stack_names"

- name: "Install Knative Eventing" 
  include_tasks: install_kn_eventing.yaml
  when: "stacks.install and  'knative-eventing' in stack_names"
